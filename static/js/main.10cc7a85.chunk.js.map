{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Label/Label.module.css","components/Form/Form.module.css","components/FilterInput/FilterInput.module.css","redux/types.js","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactsList/ContactsList.jsx","components/Form/Label/inputOptions.js","components/Form/Input/Input.jsx","components/Form/Label/Label.jsx","components/Form/Form.jsx","components/FilterInput/FilterInput.jsx","components/Phonebook/Phonebook.jsx","App.js","index.js"],"names":["module","exports","types","ADD_TO_CONTACTS","REMOVE_FROM_CONTACTS","SET_FILTER","addToContacts","createAction","removeFromContacts","setFilter","initialStore","items","id","name","number","filter","reducerContacts","createReducer","store","payload","newContact","nanoid","item","reducerFilter","configureStore","reducer","ContactsList","dispatch","useDispatch","useState","newList","setNewList","contacts","useSelector","state","useEffect","result","toLowerCase","includes","length","listMarkup","map","className","styles","type","button","onClick","inputOptions","pattern","title","Input","content","callback","options","value","onChange","required","defaultProps","Label","label","htmlFor","input","Form","setState","handleChange","target","prevState","form","onSubmit","e","preventDefault","find","contact","alert","formButton","FilterInput","Phonebook","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10cc7a85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsList_button__2sU_q\",\"item\":\"ContactsList_item__7lITV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__1QMi_\",\"input\":\"Label_input__3MTvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1tK0d\",\"formButton\":\"Form_formButton__3XW1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilterInput_input__3QGov\"};","const types = {\n  ADD_TO_CONTACTS: \"contacts/add\",\n  REMOVE_FROM_CONTACTS: \"contacts/remove\",\n  SET_FILTER: \"contacts/filter\",\n};\n\nexport default types;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport types from \"./types\";\n\nexport const addToContacts = createAction(types.ADD_TO_CONTACTS);\nexport const removeFromContacts = createAction(types.REMOVE_FROM_CONTACTS);\nexport const setFilter = createAction(types.SET_FILTER);\n","import { nanoid } from \"nanoid\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\n\nimport { addToContacts, removeFromContacts, setFilter } from \"./actions\";\n\nconst initialStore = {\n  contacts: {\n    items: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  },\n};\nexport const reducerContacts = createReducer(initialStore.contacts.items, {\n  [addToContacts]: (store, { payload }) => {\n    const newContact = { ...payload, id: nanoid() };\n    return [...store, newContact];\n  },\n  [removeFromContacts]: (store, { payload }) => {\n    const updateContacts = store.filter((item) => item.id !== payload);\n    return updateContacts;\n  },\n});\nexport const reducerFilter = createReducer(initialStore.contacts.filter, {\n  [setFilter]: (store, { payload }) => {\n    return payload;\n  },\n});\n// const rootReducer = combineReducers({\n//   items: reducerContacts,\n//   filter: reducerFilter,\n// });\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { reducerContacts, reducerFilter } from \"./reducer\";\n\nconst store = configureStore({\n  reducer: {\n    items: reducerContacts,\n    filter: reducerFilter,\n  },\n});\n\nexport default store;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport { removeFromContacts } from \"../../redux/actions\";\n\nimport styles from \"./ContactsList.module.css\";\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const [newList, setNewList] = useState([]);\n  const contacts = useSelector((state) => state.items);\n  const filter = useSelector((state) => state.filter);\n\n  useEffect(() => {\n    const newList = contacts.filter((item) => {\n      const result = item.name.toLowerCase().includes(filter.toLowerCase());\n      if (result) {\n        return result;\n      } else {\n        return item.number.includes(filter);\n      }\n    });\n    setNewList(newList);\n  }, [contacts, filter]);\n\n  const onDelete = (id) => {\n    dispatch(removeFromContacts(id));\n  };\n  if (newList.length !== 0) {\n    const listMarkup = newList.map((item) => {\n      const { name, number } = item;\n      return (\n        <li key={item.id} className={styles.item}>\n          {name}: {number}\n          <button\n            type=\"button\"\n            className={styles.button}\n            key={item.id}\n            id={item.id}\n            onClick={() => {\n              onDelete(item.id);\n            }}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n    return <ul>{listMarkup}</ul>;\n  } else {\n    return <p>Nothing found</p>;\n  }\n};\nexport default ContactsList;\n"," const inputOptions = {\n  name: {\n    type: \"text\",\n    name: \"name\",\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  },\n  number: {\n    type:\"tel\",\n    name: \"number\",\n    pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n    title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n    \n   },\n  filter: {\n    type:\"tel\",\n    name: \"filter\",\n  }\n}\nexport default inputOptions;","import PropTypes from \"prop-types\";\n\nconst Input = ({ content, callback, options, className }) => {\n  return (\n    <input\n      {...options}\n      value={content}\n      className={className}\n      onChange={callback}\n      required\n    />\n  );\n};\nInput.defaultProps = {\n  callback: () => {},\n  options: {},\n};\nInput.propTypes = {\n  content: PropTypes.string.isRequired,\n  callback: PropTypes.func,\n  options: PropTypes.object,\n  className: PropTypes.string.isRequired,\n};\nexport default Input;\n","import PropTypes from \"prop-types\";\n\nimport inputOptions from \"./inputOptions\";\nimport Input from \"../Input\";\n\nimport styles from \"./Label.module.css\";\n\nconst Label = ({ name, value, label, callback }) => {\n  return (\n    <label className={styles.label} htmlFor=\"\">\n      {label}\n      <Input\n        options={inputOptions[name]}\n        className={styles.input}\n        content={value}\n        callback={callback}\n      />\n    </label>\n  );\n};\nLabel.defaultProps = {\n  callback: () => {},\n};\nLabel.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  callback: PropTypes.func,\n};\nexport default Label;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { addToContacts } from \"../../redux/actions\";\n\nimport { useState } from \"react\";\nimport Label from \"./Label\";\nimport styles from \"./Form.module.css\";\n\nconst Form = () => {\n  const [state, setState] = useState({ name: \"\", number: \"\" });\n  const contacts = useSelector((store) => store.items);\n  const dispatch = useDispatch();\n\n  const addContact = (name, number) => {\n    const result = contacts.find((contact) => {\n      return contact.name === name || contact.number === number;\n    });\n    if (result) {\n      alert(\"Number is already in contacts\");\n      return;\n    }\n    dispatch(addToContacts({ name, number }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContact(state.name, state.number);\n    setState({ name: \"\", number: \"\" });\n  };\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <Label\n        label=\"Name\"\n        name=\"name\"\n        value={state.name}\n        callback={handleChange}\n      />\n      <Label\n        label=\"Number\"\n        name=\"number\"\n        value={state.number}\n        callback={handleChange}\n      />\n      <button className={styles.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import { setFilter } from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./FilterInput.module.css\";\n\nconst FilterInput = () => {\n  const filter = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  const setFilterInput = ({ target }) => {\n    const input = target.value;\n    dispatch(setFilter(input));\n  };\n  return (\n    <input value={filter} onChange={setFilterInput} className={styles.input} />\n  );\n};\nexport default FilterInput;\n","import ContactsList from \"../ContactsList\";\nimport Form from \"../Form\";\nimport FilterInput from \"../FilterInput\";\nconst Phonebook = () => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Form />\n      <h2>Contacts</h2>\n      <FilterInput />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Phonebook;\n","import { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\nimport \"./App.css\";\nimport Phonebook from \"./components/Phonebook\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Phonebook />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}